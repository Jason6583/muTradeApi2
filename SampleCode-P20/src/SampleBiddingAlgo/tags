!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALGO_H	sampleAlgo.h	2;"	d
Bidding	sampleAlgo.cpp	/^SBA::Bidding::Bidding( API2::StrategyParameters *params ):$/;"	f	class:SBA::Bidding
Bidding	sampleAlgo.h	/^  class Bidding: public API2::SGContext$/;"	c	namespace:SBA
FrontEndParameters	sampleAlgo.h	/^    FrontEndParameters():$/;"	f	struct:SBA::FrontEndParameters
FrontEndParameters	sampleAlgo.h	/^  struct FrontEndParameters$/;"	s	namespace:SBA
SBA	sampleAlgo.h	/^namespace SBA$/;"	n
_bidInstrument	sampleAlgo.h	/^    API2::COMMON::Instrument *_bidInstrument;$/;"	m	class:SBA::Bidding
_bidInstrument2	sampleAlgo.h	/^    API2::COMMON::Instrument *_bidInstrument2;$/;"	m	class:SBA::Bidding
_bidOrderWrapper	sampleAlgo.h	/^    API2::COMMON::OrderWrapper _bidOrderWrapper; $/;"	m	class:SBA::Bidding
_isSnapshot	sampleAlgo.h	/^    bool _isSnapshot;$/;"	m	class:SBA::Bidding
_isTbtEnabled	sampleAlgo.h	/^    bool _isTbtEnabled;$/;"	m	class:SBA::Bidding
_isTimerOver	sampleAlgo.h	/^    bool _isTimerOver;$/;"	m	class:SBA::Bidding
_marketPrice	sampleAlgo.h	/^    SIGNED_LONG _marketPrice;$/;"	m	class:SBA::Bidding
_mkData	sampleAlgo.h	/^    API2::COMMON::MktData *_mkData;$/;"	m	class:SBA::Bidding
_mktS	sampleAlgo.h	/^    API2::COMMON::MktData *_mktS;$/;"	m	class:SBA::Bidding
_mktSU	sampleAlgo.h	/^    API2::COMMON::MktData *_mktSU;$/;"	m	class:SBA::Bidding
_mktT	sampleAlgo.h	/^    API2::COMMON::MktData *_mktT;$/;"	m	class:SBA::Bidding
_mktTU	sampleAlgo.h	/^    API2::COMMON::MktData *_mktTU;$/;"	m	class:SBA::Bidding
_modParams	sampleAlgo.h	/^    FrontEndParameters _params, _modParams;$/;"	m	class:SBA::Bidding
_modify	sampleAlgo.h	/^    bool _modify;$/;"	m	class:SBA::Bidding
_params	sampleAlgo.h	/^    FrontEndParameters _params, _modParams;$/;"	m	class:SBA::Bidding
_qty	sampleAlgo.h	/^    SIGNED_LONG _qty;$/;"	m	class:SBA::Bidding
_riskStatus	sampleAlgo.h	/^    API2::DATA_TYPES::RiskStatus _riskStatus;$/;"	m	class:SBA::Bidding
_terminateCheck	sampleAlgo.h	/^    bool _terminateCheck;$/;"	m	class:SBA::Bidding
_traded	sampleAlgo.h	/^    SIGNED_LONG _traded;$/;"	m	class:SBA::Bidding
account	sampleAlgo.h	/^    API2::AccountDetail account;$/;"	m	struct:SBA::FrontEndParameters
achievedPrice	sampleAlgo.h	/^    SIGNED_LONG achievedPrice;$/;"	m	struct:SBA::FrontEndParameters
bestPriceTicks	sampleAlgo.h	/^    SIGNED_LONG bestPriceTicks;$/;"	m	struct:SBA::FrontEndParameters
bidDriver	sampleAlgo.cpp	/^void SBA::Bidding::bidDriver(void *params)$/;"	f	class:SBA::Bidding
cancelOrder	sampleAlgo.cpp	/^void SBA::Bidding::cancelOrder()$/;"	f	class:SBA::Bidding
createOrderIds	sampleAlgo.cpp	/^void SBA::Bidding::createOrderIds()$/;"	f	class:SBA::Bidding
driverPtr	externalInterface.cpp	/^typedef void *(*driverPtr)(void *);$/;"	t	file:
dump	sampleAlgo.cpp	/^void SBA::Bidding::dump(SBA::FrontEndParameters &params)$/;"	f	class:SBA::Bidding
getDriver	externalInterface.cpp	/^  void getDriver(void * params)$/;"	f
getFrontEndDesign	externalInterface.cpp	/^  std::string getFrontEndDesign()$/;"	f
getMarketPrice	sampleAlgo.cpp	/^SIGNED_LONG SBA::Bidding::getMarketPrice()$/;"	f	class:SBA::Bidding
getVersion	externalInterface.cpp	/^  std::string getVersion()$/;"	f
mapModifiedParameters	sampleAlgo.cpp	/^void SBA::Bidding::mapModifiedParameters()$/;"	f	class:SBA::Bidding
modifyStrategy	sampleAlgo.cpp	/^void SBA::Bidding::modifyStrategy()$/;"	f	class:SBA::Bidding
multiplier	sampleAlgo.h	/^    SIGNED_LONG multiplier;$/;"	m	class:SBA::Bidding
onCMDModifyStrategy	sampleAlgo.cpp	/^void SBA::Bidding::onCMDModifyStrategy(API2::AbstractUserParams* newParams)$/;"	f	class:SBA::Bidding
onCMDTerminateStartegy	sampleAlgo.cpp	/^void SBA::Bidding::onCMDTerminateStartegy()$/;"	f	class:SBA::Bidding
onCancelRejected	sampleAlgo.cpp	/^void SBA::Bidding::onCancelRejected(API2::OrderConfirmation &confirmation, API2::COMMON::OrderId *orderId)$/;"	f	class:SBA::Bidding
onCanceled	sampleAlgo.cpp	/^void SBA::Bidding::onCanceled(API2::OrderConfirmation &confirmation, API2::COMMON::OrderId *orderId)$/;"	f	class:SBA::Bidding
onConfirmed	sampleAlgo.cpp	/^void SBA::Bidding::onConfirmed(API2::OrderConfirmation &confirmation,API2::COMMON::OrderId *orderId)$/;"	f	class:SBA::Bidding
onDefaultEvent	sampleAlgo.cpp	/^void SBA::Bidding::onDefaultEvent()$/;"	f	class:SBA::Bidding
onFilled	sampleAlgo.cpp	/^void SBA::Bidding::onFilled(API2::OrderConfirmation &confirmation, API2::COMMON::OrderId *orderId)$/;"	f	class:SBA::Bidding
onMarketDataEvent	sampleAlgo.cpp	/^void SBA::Bidding::onMarketDataEvent(UNSIGNED_LONG symbolId)$/;"	f	class:SBA::Bidding
onNewReject	sampleAlgo.cpp	/^void SBA::Bidding::onNewReject(API2::OrderConfirmation &confirmation, API2::COMMON::OrderId *orderId)$/;"	f	class:SBA::Bidding
onPartialFill	sampleAlgo.cpp	/^void SBA::Bidding::onPartialFill(API2::OrderConfirmation &confirmation, API2::COMMON::OrderId *orderId)$/;"	f	class:SBA::Bidding
onReplaceRejected	sampleAlgo.cpp	/^void SBA::Bidding::onReplaceRejected(API2::OrderConfirmation &confirmation, API2::COMMON::OrderId *orderId)$/;"	f	class:SBA::Bidding
onReplaced	sampleAlgo.cpp	/^void SBA::Bidding::onReplaced(API2::OrderConfirmation &confirmation, API2::COMMON::OrderId *orderId)$/;"	f	class:SBA::Bidding
onRmsReject	sampleAlgo.cpp	/^void SBA::Bidding::onRmsReject( API2::OrderConfirmation &confirmation, API2::COMMON::OrderId *orderId)$/;"	f	class:SBA::Bidding
onTimerEvent	sampleAlgo.cpp	/^void SBA::Bidding::onTimerEvent()$/;"	f	class:SBA::Bidding
oppositePrice	sampleAlgo.h	/^    SIGNED_LONG oppositePrice;$/;"	m	struct:SBA::FrontEndParameters
orderLots	sampleAlgo.h	/^    SIGNED_LONG orderLots;$/;"	m	struct:SBA::FrontEndParameters
orderMode	sampleAlgo.h	/^    char orderMode;$/;"	m	struct:SBA::FrontEndParameters
placeOrder	sampleAlgo.cpp	/^void SBA::Bidding::placeOrder()$/;"	f	class:SBA::Bidding
popup	sampleAlgo.cpp	/^void SBA::Bidding::popup(std::string message)$/;"	f	class:SBA::Bidding
price	sampleAlgo.h	/^    SIGNED_LONG price;$/;"	m	class:SBA::Bidding
processOrder	sampleAlgo.cpp	/^bool SBA::Bidding::processOrder( API2::OrderConfirmation &confirmation, API2::COMMON::OrderId *orderId)$/;"	f	class:SBA::Bidding
readConfig	sampleAlgo.cpp	/^void SBA::Bidding::readConfig()$/;"	f	class:SBA::Bidding
registerSymbols	sampleAlgo.cpp	/^void SBA::Bidding::registerSymbols()$/;"	f	class:SBA::Bidding
replaceOrder	sampleAlgo.cpp	/^void SBA::Bidding::replaceOrder()$/;"	f	class:SBA::Bidding
sendUpdateResponse	sampleAlgo.cpp	/^void SBA::Bidding::sendUpdateResponse()$/;"	f	class:SBA::Bidding
setInternalParameters	sampleAlgo.cpp	/^bool SBA::Bidding::setInternalParameters(API2::UserParams *customParams, SBA::FrontEndParameters &params)$/;"	f	class:SBA::Bidding
strategyId	sampleAlgo.h	/^    SIGNED_INTEGER strategyId;$/;"	m	struct:SBA::FrontEndParameters
symbol	sampleAlgo.h	/^    SIGNED_LONG symbol;$/;"	m	struct:SBA::FrontEndParameters
terminateStrategyComment	sampleAlgo.cpp	/^void SBA::Bidding::terminateStrategyComment(API2::DATA_TYPES::StrategyComment comment)$/;"	f	class:SBA::Bidding
totalLots	sampleAlgo.h	/^    SIGNED_LONG totalLots;$/;"	m	struct:SBA::FrontEndParameters
